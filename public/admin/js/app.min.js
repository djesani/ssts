angular
    .module('adminApp', ['ui.bootstrap', 'ngAnimate', 'ui.router']);
angular.module('adminApp')
    .config(function($stateProvider) {
        $stateProvider
            .state('admin', {
                abstract: true,
                url: '',
                template: '<div ui-view></div>'
            })
    });


angular
    .module('adminApp')
    .constant('apiUrl', '/admin');
angular
    .module('adminApp')
    .controller('CoreCtrl', function($state) {

        $state.go('admin.events.list');

    });
    
'use strict';

angular.module('adminApp')
    .controller('EventsAddCtrl', function ($state, $stateParams, eventsService, eventsData) {

        var vm = this;
        vm.save = save;
        vm.cancel = cancel;
        vm.forms = {};
        vm.view = {};
        vm.view.edit = true;

        function save(event) {

            console.log('vm.event '  + event);

            if (vm.forms.form.$valid) {
                eventsService.postEvent(event).then(function (event) {
                    eventsData = eventsData || [];
                    eventsData.push(event);
                    console.log(event)
                    $state.go('admin.events.list');
                });
            }
        }

        function cancel() {
            $state.go('admin.events.list', {
                id: $stateParams.id
            });
        }

    });

'use strict';

angular.module('adminApp')
    .controller('EventsDetailCtrl', function ($stateParams, eventsData) {

        var vm = this;
        vm.view = {};
        vm.view.edit = false;
        vm.view.readOnly = true;
        vm.eventId = $stateParams.id;

        // function getEvent(id) {
        //     var obj = eventsData.filter(function (node) {
        //         return node.id == id;
        //     });
        //     return obj[0];
        // }

        // vm.event = getEvent($stateParams.id);

        vm.event = eventsData[$stateParams.id];

    }); 
'use strict';

angular.module('adminApp')
    .controller('EventsEditCtrl', function ($state, $stateParams, eventsService, eventsData) {
        
        var vm = this;
        vm.save = save;
        vm.cancel = cancel;
        // vm.delete = delete;
        vm.forms = {};
        vm.view = {};
        vm.view.edit = true;
        vm.eventId = $stateParams.id;

        // function getEvent(id) {
        //     var obj = eventsData.filter(function (node) {
        //         return node.id == id;
        //     });
        //     return obj[0];
        // }

        // vm.event = getEvent($stateParams.id);

        vm.event = eventsData[$stateParams.id];

        var backup = angular.copy(vm.event);

        function save(event) {
            if (vm.forms.form.$valid) {
                eventsService.patchEvent(event).then(function (event) {
                    $state.go('admin.events.list');
                });
            }
        }

        function cancel() {
            angular.copy(backup, vm.event);
            $state.go('admin.events.list');
        }

        // function delete(event) {
        //     eventsService.deleteEvent(event).then(function (event) {
        //         $state.go('admin.events.list');
        //     })
        // }

    });
'use strict';

angular.module('adminApp')
    .controller('EventsListCtrl', function(eventsData) {
        var vm = this;
        vm.events = eventsData;
    });

'use strict';

angular.module('adminApp')
    .config(function($stateProvider) {
        $stateProvider
            .state('admin.events', {
                abstract: true,
                url: '/events',
                resolve: {
                    eventsData: ['eventsService', '$stateParams', function (eventsService, $stateParams) {
                        return eventsService.getEvents($stateParams.id);
                    }]
                },
                template: '<div ui-view></div>'
            })
            .state('admin.events.list', {
                url: '',
                controller: 'EventsListCtrl',
                controllerAs: 'vm',
                templateUrl:'app/events/events-list.html',
            })
            .state('admin.events.detail', {
                url: '/:id/detail',
                controller: 'EventsDetailCtrl',
                controllerAs: 'vm',
                templateUrl:'app/events/events-detail.html',
            })
            .state('admin.events.add', {
                url: '/add',
                controller: 'EventsAddCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-add.html'
            })
            .state('admin.events.edit', {
                url: '/:id/edit',
                controller: 'EventsEditCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-edit.html'
            })
    });


'use strict';

angular.module('adminApp')
    .factory('eventsService', function ($http, apiUrl) {

        // Public API here
        return {
            getEvents: getEvents,
            getEvent: getEvent,
            postEvent: postEvent,
            patchEvent: patchEvent,
            deleteEvent: deleteEvent
        }

        function getEvents() {
            var getUrl = apiUrl + '/' + 'events';
            console.log('GET ' + getUrl);

            return $http.get(getUrl).then(function (response) {
                console.log(response.data)
                return response.data;
            })
        }

        function getEvent(id) {
            var getUrl = apiUrl + '/' + 'events' + '/' + id;
            console.log('GET ID ' + getUrl);

            return $http.get(getUrl).then(function (response) {
                return response.data;
            })
        }

        function postEvent(event) {
            var getUrl = apiUrl + '/' + 'events';
            console.log('POST ' + getUrl);
            console.log('POST event ' + event);

            return $http.post(getUrl, event).then(function (response) {
                console.log('POST event response ' + response.data);
            })
        }

        function patchEvent(event) {
            var getUrl = apiUrl + '/' + 'events';
            console.log('PUT ' + getUrl);

            return $http.patch(getUrl, event).then(function (response) {
                console.log(response.data);
            })
        }

        function deleteEvent(event) {
            return $http.delete(apiUrl + '/' + 'events' + '/' + event.id);
        }

    });

