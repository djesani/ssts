angular
    .module('adminApp', ['ui.bootstrap', 'ngAnimate', 'ngSanitize', 'ui.router']);
// angular.module('adminApp')
//     .config(function ($stateProvider) {
//         $stateProvider
//             .state('admin', {
//                 abstract: true,
//                 url: '',
//                 template: '<div ui-view></div>'
//             })
//     });
angular
    .module('adminApp')
    // .constant('apiUrl', 'http://localhost:9999');
    .constant('apiUrl', 'admin');
angular
    .module('adminApp')
    .controller('CoreCtrl', function ($state, $timeout) {

        $timeout(function () {
            $state.go('events.list');
        })
    });
angular.module('adminApp')
    .directive("jqueryUiDatepicker", function () {
        return {
            restrict: "A",
            require: "ngModel",
            link: function (scope, element, attrs, ngModelController) {
                var updateModel = function (dateText) {
                    scope.$apply(function () {
                        ngModelController.$setViewValue(dateText);
                    });
                };
                var options = {
                    dateFormat: "dd M yy",
                    changeMonth: true,
                    changeYear: true,
                    onSelect: function (dateText) {
                        updateModel(dateText);
                    }
                };
                element.datepicker(options);
            }
        }
    });

angular.module('adminApp')
    .directive('formattedDate', function (dateFilter) {
        return {
            require: 'ngModel',
            scope: {
                format: "="
            },
            link: function (scope, element, attrs, ngModelController) {
                ngModelController.$parsers.push(function (data) {
                    //convert data from view format to model format
                    return dateFilter(data, scope.format); //converted
                });

                ngModelController.$formatters.push(function (data) {
                    //convert data from model format to view format
                    return dateFilter(data, scope.format); //converted
                });
            }
        }
    });

angular.module('adminApp')
    .filter('dateFormat', function ($filter) {
        var angularDateFilter = $filter('date');
        return function (theDate) {
            return angularDateFilter(theDate, 'dd MMM yyyy');
        }
    });
'use strict';

angular.module('adminApp')
    .controller('EventsAddCtrl', function ($state, $stateParams, eventsService, eventsData) {

        var vm = this;
        vm.save = save;
        vm.cancel = cancel;
        vm.forms = {};
        vm.view = {};
        vm.view.edit = true;
        vm.event = {};

        function save(event) {

            if (vm.forms.form.$valid) {
                eventsService.postEvent(event).then(function (event) {
                    eventsData = eventsData || [];
                    eventsData.push(event);
                    $state.go('events.list');
                });
            }
        }

        function cancel() {
            $state.go('events.list', {
                id: $stateParams.id
            });
        }

    });


'use strict';

angular.module('adminApp')
    .controller('EventsDetailCtrl', function ($stateParams, eventsData) {

        var vm = this;
        vm.view = {};
        vm.view.edit = false;
        vm.view.readOnly = true;
        vm.eventId = $stateParams.id;

        vm.event = eventsData[$stateParams.id];

        vm.format = 'yyyy/MM/dd';
        vm.date = new Date();

    });
'use strict';

angular.module('adminApp')
    .controller('EventsEditCtrl', function ($state, $stateParams, eventsService, eventsData) {

        var vm = this;
        vm.save = save;
        vm.cancel = cancel;
        vm.deleteEvent = deleteEvent;
        vm.forms = {};
        vm.view = {};
        vm.view.edit = true;
        vm.eventId = $stateParams.id;

        vm.event = eventsData[$stateParams.id];

        var backup = angular.copy(vm.event);

        function save(event) {
            if (vm.forms.form.$valid) {
                eventsService.patchEvent(event).then(function (event) {
                    $state.go('events.list');
                });
            }
        }

        function cancel() {
            angular.copy(backup, vm.event);
            $state.go('events.list');
        }

        function deleteEvent(event) {
            eventsService.deleteEvent(event).then(function (event) {
                $state.go('events.list');
            })
        }

    });
'use strict';

angular.module('adminApp')
    .controller('EventsListCtrl', function (eventsService, eventsData, $state) {
        var vm = this;
        vm.events = eventsData;
        vm.deleteEvent = deleteEvent;

        function deleteEvent(event, index) {

            eventsService.deleteEvent(event).then(function (event) {
                $state.go('events.list');
                eventsData.splice(index, 1);
            })
        }
    });


'use strict';

angular.module('adminApp')
    .config(function ($stateProvider) {
        $stateProvider
            .state('events', {
                abstract: true,
                url: '/events',
                resolve: {
                    eventsData: function (eventsService, $stateParams) {
                        return eventsService.getEvents($stateParams.id);
                    }
                },
                template: '<div ui-view></div>'
            })
            .state('events.list', {
                url: '',
                controller: 'EventsListCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-list.html',
            })
            .state('events.detail', {
                url: '/:id/detail',
                controller: 'EventsDetailCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-detail.html',
            })
            .state('events.add', {
                url: '/add',
                controller: 'EventsAddCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-add.html'
            })
            .state('events.edit', {
                url: '/:id/edit',
                controller: 'EventsEditCtrl',
                controllerAs: 'vm',
                templateUrl: 'app/events/events-edit.html'
            })
    });
'use strict';

angular.module('adminApp')
    .factory('eventsService', function ($http, apiUrl) {

        // Public API here
        return {
            getEvents: getEvents,
            getEvent: getEvent,
            postEvent: postEvent,
            patchEvent: patchEvent,
            deleteEvent: deleteEvent
        }

        function getEvents() {
            var getUrl = apiUrl + '/' + 'events';
            console.log('GET ' + getUrl);

            return $http.get(getUrl).then(function (response) {
                // console.log(response.data)
                return response.data;
            })
        }

        function getEvent(id) {
            var getUrl = apiUrl + '/' + 'events' + '/' + id;
            console.log('GET ID ' + getUrl);

            return $http.get(getUrl).then(function (response) {
                return response.data;
            })
        }

        function postEvent(event) {
            var getUrl = apiUrl + '/' + 'events';
            console.log('POST ' + getUrl);
            console.log('POST event ' + event);
            console.log(event);

            return $http.post(getUrl, event).then(function (response) {
                console.log('POST event response ' + response.data);
            })
        }

        function patchEvent(event) {
            var getUrl = apiUrl + '/' + 'events' + '/' + event.filename;
            console.log('PUT ' + getUrl);

            return $http.patch(getUrl, event).then(function (response) {
                console.log(response.data);
            })
        }

        function deleteEvent(event) {
            return $http.delete(apiUrl + '/' + 'events' + '/' + event.filename);
        }

    });

